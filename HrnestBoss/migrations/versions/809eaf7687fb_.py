"""empty message

Revision ID: 809eaf7687fb
Revises: 
Create Date: 2021-09-19 21:35:08.964375

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision = '809eaf7687fb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('shift_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('emp_type', sa.Integer(), nullable=True),
    sa.Column('type_source', sa.String(), nullable=True),
    sa.Column('iswholeday', sa.Boolean(), nullable=True),
    sa.Column('req_type_id', sa.Integer(), nullable=True),
    sa.Column('time_from', sa.DateTime(), nullable=True),
    sa.Column('time_to', sa.DateTime(), nullable=True),
    sa.Column('enumerable', sa.Boolean(), nullable=True),
    sa.Column('info', sa.String(), nullable=True),
    sa.Column('objversion', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('timetable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hrnest_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('date_from', sa.DateTime(), nullable=True),
    sa.Column('date_to', sa.DateTime(), nullable=True),
    sa.Column('time_offset', sa.Integer(), nullable=True),
    sa.Column('objversion', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hrnest_id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user_request',
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('userId', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('typeId', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('isWholeDay', sa.Boolean(), nullable=True),
    sa.Column('dateFrom', sa.DateTime(), nullable=True),
    sa.Column('dateTo', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('number'),
    sa.UniqueConstraint('number')
    )
    op.create_table('work_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('leader', sa.String(), nullable=True),
    sa.Column('objversion', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('emp_id', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('default_wrkgroup', sa.Integer(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('snet', sa.String(), nullable=True),
    sa.Column('objversion', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['default_wrkgroup'], ['work_group.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user2timetable',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timetable_id', sa.Integer(), nullable=False),
    sa.Column('default_wrkgroup', sa.Integer(), nullable=True),
    sa.Column('objversion', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['default_wrkgroup'], ['work_group.id'], onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['timetable_id'], ['timetable.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'user_id', 'timetable_id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('shift',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('emp_type', sa.String(), nullable=True),
    sa.Column('date_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['shift_type.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user2timetable.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'user_id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('shift')
    op.drop_table('user2timetable')
    op.drop_table('users')
    op.drop_table('work_group')
    op.drop_table('user_request')
    op.drop_table('timetable')
    op.drop_table('shift_type')
    # ### end Alembic commands ###
